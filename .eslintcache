[{"D:\\React\\itss_std_react_todo_k63\\src\\index.js":"1","D:\\React\\itss_std_react_todo_k63\\src\\App.js":"2","D:\\React\\itss_std_react_todo_k63\\src\\reportWebVitals.js":"3","D:\\React\\itss_std_react_todo_k63\\src\\components\\Todo.js":"4","D:\\React\\itss_std_react_todo_k63\\src\\components\\TodoItem.js":"5","D:\\React\\itss_std_react_todo_k63\\src\\components\\Input.js":"6","D:\\React\\itss_std_react_todo_k63\\src\\components\\Filter.js":"7","D:\\React\\itss_std_react_todo_k63\\src\\hooks\\storage.js":"8","D:\\React\\itss_std_react_todo_k63\\src\\lib\\util.js":"9","D:\\React\\itss_std_react_todo_k63\\src\\components\\Upload.js":"10","D:\\React\\itss_std_react_todo_k63\\src\\lib\\firebase.js":"11","D:\\React\\itss_std_react_todo_k63\\src\\hooks\\FbStorage.js":"12"},{"size":517,"mtime":1654228782358,"results":"13","hashOfConfig":"14"},{"size":1510,"mtime":1656051454121,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1654228782360,"results":"16","hashOfConfig":"14"},{"size":1937,"mtime":1656051177313,"results":"17","hashOfConfig":"14"},{"size":407,"mtime":1656050535160,"results":"18","hashOfConfig":"14"},{"size":602,"mtime":1656051266363,"results":"19","hashOfConfig":"14"},{"size":994,"mtime":1654639129391,"results":"20","hashOfConfig":"14"},{"size":696,"mtime":1656049627122,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1654228782359,"results":"22","hashOfConfig":"14"},{"size":1778,"mtime":1656049560159,"results":"23","hashOfConfig":"14"},{"size":2878,"mtime":1656050137497,"results":"24","hashOfConfig":"14"},{"size":1919,"mtime":1656050754369,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"c87af5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"D:\\React\\itss_std_react_todo_k63\\src\\index.js",[],["57","58"],"D:\\React\\itss_std_react_todo_k63\\src\\App.js",["59","60","61"],"D:\\React\\itss_std_react_todo_k63\\src\\reportWebVitals.js",[],"D:\\React\\itss_std_react_todo_k63\\src\\components\\Todo.js",["62","63","64"],"import React, { useState } from 'react';\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\n// import useStorage from '../hooks/storage';\r\nimport useFbStorage from '../hooks/FbStorage';\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  // const [items, putItems, clearItems] = useStorage();\r\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\r\n  \r\n  const [filter, setFilter] = React.useState('ALL');\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n  \r\n  const handleCheck = checked => {\r\n\r\n    updateItem(checked);\r\n  };\r\n  \r\n  const handleAdd = text => {\r\n    // putItems([...items, { key: getKey(), text, done: false }]);\r\n    addItem({ text, done: false });\r\n  };\r\n  \r\n  const handleFilterChange = value => setFilter(value);\r\n\r\n  return (\r\n    <article class=\"panel is-danger\">\r\n      <div className=\"panel-heading\">\r\n        <span class=\"icon-text\">\r\n          <span class=\"icon\">\r\n            <i class=\"fas fa-calendar-check\"></i>\r\n          </span>\r\n          <span> ITSS Todoアプリ</span>\r\n        </span>\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <TodoItem \r\n          key={item.id}\r\n          item={item}\r\n          onCheck={handleCheck}\r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Todo;","D:\\React\\itss_std_react_todo_k63\\src\\components\\TodoItem.js",[],"D:\\React\\itss_std_react_todo_k63\\src\\components\\Input.js",["65"],"import React, { useState } from 'react';\r\n\r\nfunction Input( { onAdd } ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\React\\itss_std_react_todo_k63\\src\\components\\Filter.js",["66","67","68"],"/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ value, onChange }) {\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, \"ALL\")}\r\n        className={value === \"ALL\" ? \"is-active\" : \"\"}\r\n      >\r\n        全て\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, \"TODO\")}\r\n        className={value === \"TODO\" ? \"is-active\" : \"\"}\r\n      >\r\n        未完了\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, \"DONE\")}\r\n        className={value === \"DONE\" ? \"is-active\" : \"\"}\r\n      >\r\n        完了済み\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","D:\\React\\itss_std_react_todo_k63\\src\\hooks\\storage.js",[],["69","70"],"D:\\React\\itss_std_react_todo_k63\\src\\lib\\util.js",[],"D:\\React\\itss_std_react_todo_k63\\src\\components\\Upload.js",["71"],"import React, { useState } from 'react'\r\n\r\n/* ライブラリ */\r\nimport { uploadImage } from \"../lib/firebase\";\r\n\r\nfunction Upload({ userImage, onSletctedImage }) {\r\n  const [isModal, setIsModal] = useState(false);\r\n  const active = isModal ? \"is-active\" : \"\";\r\n  const [imageUrl, setImageUrl] = useState(userImage);\r\n\r\n  const handleImage = async event => {\r\n    const image = event.target.files[0];\r\n    const imageUrl = await uploadImage(image);\r\n    onSletctedImage(imageUrl);\r\n    setImageUrl(imageUrl);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsModal(!isModal);\r\n  };\r\n\r\n  const ImageViewer = () => {\r\n    if (!imageUrl) {\r\n      return <i class=\"fas fa-user\"></i>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <img src={imageUrl} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={`modal ${active}`}>\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content\">\r\n          <div class=\"file is-boxed\" >\r\n            <label class=\"file-label\">\r\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\r\n              <span class=\"file-cta\">\r\n                <span class=\"file-icon\">\r\n                  <i class=\"fas fa-upload\"></i>\r\n                </span>\r\n                <span class=\"file-label\">画像を選択してください</span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\r\n        <span class=\"icon\">\r\n          <ImageViewer />\r\n        </span>\r\n      </button>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Upload;","D:\\React\\itss_std_react_todo_k63\\src\\lib\\firebase.js",[],"D:\\React\\itss_std_react_todo_k63\\src\\hooks\\FbStorage.js",["72"],"import { useState, useEffect } from \"react\";\r\nimport firebase from 'firebase/compat/app';\r\n/* ライブラリ */\r\nimport {\r\n  addFirebaseItem,\r\n  updateFirebaseItem,\r\n  getFirebaseItems,\r\n  clearFirebaseItem,\r\n} from \"../lib/firebase\";\r\n\r\nfunction useFbStorage() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems();\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async (item) => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async (checked) => {\r\n    const changes = { done: !checked.done };\r\n    await updateFirebaseItem(changes, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item = { ...item, changes };\r\n      }\r\n      return item;\r\n    });\r\n    setItems(newItems);\r\n  };\r\n\r\n  const clearItems = () => {\r\n    items.map((item) => {\r\n      clearFirebaseItem(item);\r\n    });\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport const updateUser = async (user, image) => {\r\n  try {\r\n    const userDoc = await firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(user.id)\r\n      .get();\r\n    if (userDoc.exists) {\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(user.id)\r\n        .update({ ...userDoc.data(), image: image });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const uploadImage = async (image) => {\r\n  const ref = firebase.storage().ref().child(`/images/${image.name}`);\r\n  let downloadUrl = \"\";\r\n  try {\r\n    await ref.put(image);\r\n    downloadUrl = await ref.getDownloadURL();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return downloadUrl;\r\n};\r\nexport default useFbStorage;\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":10,"column":31,"nodeType":"79","messageId":"80","endLine":10,"endColumn":41},{"ruleId":"77","severity":1,"message":"82","line":13,"column":10,"nodeType":"79","messageId":"80","endLine":13,"endColumn":17},{"ruleId":"77","severity":1,"message":"83","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":13,"column":9,"nodeType":"79","messageId":"80","endLine":13,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":21,"column":42,"nodeType":"87","messageId":"88","endLine":21,"endColumn":44},{"ruleId":"77","severity":1,"message":"83","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":15,"column":7,"nodeType":"91","endLine":19,"endColumn":8},{"ruleId":"89","severity":1,"message":"90","line":22,"column":7,"nodeType":"91","endLine":26,"endColumn":8},{"ruleId":"89","severity":1,"message":"90","line":29,"column":7,"nodeType":"91","endLine":33,"endColumn":8},{"ruleId":"73","replacedBy":"92"},{"ruleId":"75","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":28,"column":11,"nodeType":"91","endLine":28,"endColumn":33},{"ruleId":"85","severity":1,"message":"96","line":42,"column":22,"nodeType":"87","messageId":"97","endLine":42,"endColumn":24},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Upload' is defined but never used.","Identifier","unusedVar","'updateUser' is defined but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["98"],["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]